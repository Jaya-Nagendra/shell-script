1. In shell script wont stop the execution if it faces error. It is our responsibilty to check and proceed.

2. For avoid this issue There is a concept - EXIT Status 

3. EXIT Status - Here we can check the previous command was sucess or not 
After completion of an command if we print - echo $? - It will print the number if '0' - it was ssucesss. or 'other then' 0 its failur 


Functions - For reducing the repeating code.

Storing Logs 
--------------

1 for sucess logs.
2 for failed logs.
& for sucess and failed logs.

EX: ls -l 1>temp.log     -- this will store the log files in to the temp.log insted of desplayig in the console.

> - this will append the content. If we need to add the data will use >>

ls -l $>> temp.log


Color codes for text - For enabling color need to give -e
....................
RED - \e[31m

GREEN - \e[32m

YELLOW - \e[33m

Normal - \e[0m

####### For mail configuration ######

Sending Gmail from CentOS 8
switch to root
sudo su -
Install Postfix, the SASL authentication framework, and mailx.
yum -y install postfix cyrus-sasl-plain mailx
Restart Postfix to detect the SASL framework.
systemctl restart postfix 
Start Postfix on boot
systemctl enable postfix 
Open the /etc/postfix/main.cf file.
vi /etc/postfix/main.cf 
append the following into the file at the end

relayhost = [smtp.gmail.com]:587
smtp_use_tls = yes
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
smtp_sasl_security_options = noanonymous
smtp_sasl_tls_security_options = noanonymous
Configure Postfix SASL Credentials
Add the Gmail credentials for authentication. Create a "/etc/postfix/sasl_passwd" file

touch /etc/postfix/sasl_passwd  
Add the following line to the file:

vi /etc/postfix/sasl_passwd
[smtp.gmail.com]:587 xyz:AppPassword
Note: xyz is from xyz@gmail.com, password_app is from google management app password

Create a Postfix lookup table from the sasl_passwd text file by running the following command:
postmap /etc/postfix/sasl_passwd 
Sending mail Run the following command to send mail:
echo "This is a test mail & Date $(date)" | mail -s "message" info@joindevops.com


## Crontab #######

Used to sechedule the script.